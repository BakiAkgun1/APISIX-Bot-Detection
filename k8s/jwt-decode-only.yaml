apiVersion: apisix.apache.org/v2
kind: ApisixRoute
metadata:
  name: jwt-decode-route
  namespace: default
  labels:
    app: jwt-decode
    component: routing
  annotations:
    kubernetes.io/ingress.class: apisix
spec:
  http:
  - name: jwt-decode-only
    priority: 1000
    match:
      hosts:
      - "*"
      paths:
      - "/jwt-decode"
    backends:
    - serviceName: portal-svc
      servicePort: 80
      weight: 100
    plugins:
    - name: serverless-pre-function
      enable: true
      config:
        phase: access
        functions:
        - "return function(conf, ctx) local core = require('apisix.core') local jwt = require('resty.jwt') local token = core.request.header(ctx, 'authorization') if not token then core.response.exit(400, {success = false, message = 'No JWT token found', timestamp = os.date('!%Y-%m-%dT%H:%M:%SZ')}) return end token = string.gsub(token, '^Bearer ', '') token = string.gsub(token, '^bearer ', '') local jwt_obj = jwt:load_jwt(token) if not jwt_obj or not jwt_obj.valid or not jwt_obj.payload then core.response.exit(400, {success = false, message = 'Invalid JWT token', timestamp = os.date('!%Y-%m-%dT%H:%M:%SZ')}) return end local payload = jwt_obj.payload local username = payload.name or payload.username or 'unknown' local sub = payload.sub or 'unknown' local admin = payload.admin or false local bot_users = {['bot_user'] = true, ['testuser'] = true, ['admin_user'] = true, ['bot'] = true} local user_type = 'normal' local is_bot = false if bot_users[username] or bot_users[sub] then user_type = 'bot' is_bot = true end core.response.exit(200, {success = true, message = 'JWT Token Decoded Successfully', timestamp = os.date('!%Y-%m-%dT%H:%M:%SZ'), user_type = user_type, is_bot = is_bot, jwt_decoded = {username = username, subject = sub, admin = admin, issued_at = payload.iat or 'unknown', expires_at = payload.exp or 'unknown'}, routing_decision = {target_service = is_bot and 'portal-svc-bot' or 'portal-svc', target_page = is_bot and 'Bot Page (Red)' or 'Normal Page (Green)'}}) end"